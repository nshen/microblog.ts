function index(n,t){db.getPost(null,function(i){i==null&&(i=[]),t.render("index",{title:"req",user:n.session.user,posts:i})})}function reg(){throw new Error("An error for test purposes.");}function doReq(n,t){if(n.body["password-repeat"]!=n.body.password){n.session.flash.error=l.password_incorect,t.redirect("/reg");return}db.getUser(n.body.username,function(i){var r,u;if(console.log(i,i!=null),i!=null)return n.session.flash.error=l.userAlreadyExists,t.redirect("/reg");r=crypto.createHash("md5"),r.update(n.body.password),u={name:n.body.username,password:r.digest("base64")},db.addUser(u,function(i){return i!=null?(n.session.user=u,n.session.flash.success=l.reqSuccess,t.redirect("/")):(n.session.flash.error=l.reqFailed,t.redirect("/reg"))})})}function login(n,t){t.render("login",{title:l.login,user:n.session.user})}function doLogin(n,t){var i=crypto.createHash("md5"),r;i.update(n.body.password),r=i.digest("base64"),db.getUser(n.body.username,function(i){if(!i)return n.session.flash.error=l.userNotExists,t.redirect("/login");if(i.password!=r)return n.session.flash.error=l.password_incorect,t.redirect("/login");n.session.user=i,n.session.success=l.loginSuccess,t.redirect("/")})}function logout(n,t){n.session.user=null,n.session.flash.success=l.logoutSuccess,t.redirect("/")}function user(n,t){db.getUser(n.params.user,function(i){i==null?(n.session.flash.error=l.userNotExists,t.redirect("/")):db.getPost(i.name,function(r){t.render("user",{title:i.name,posts:r,user:n.session.user})})})}function post(n,t){var i=n.session.user,r={user:i.name,post:n.body.post,time:new Date};db.addPost(r,function(r){r!=null&&(n.session.flash.success=l.postSuccess,t.redirect("/u/"+i.name))})}function hello(n,t){t.send("The time is "+(new Date).toString())}var crypto=require("crypto"),db=require("../db"),l=require("../Language");exports.index=index,exports.reg=reg,exports.doReq=doReq,exports.login=login,exports.doLogin=doLogin,exports.logout=logout,exports.user=user,exports.post=post,exports.hello=hello