function checkNotLogin(n,t,i){if(n.session.user)return n.session.flash.error=l.userAlreadyLogin,t.redirect("/");i()}function checkLogin(n,t,i){if(!n.session.user)return n.session.flash.error=l.userNotLogin,t.redirect("/login");i()}var express=require("express"),routes=require("./routes/index"),http=require("http"),path=require("path"),l=require("./Language"),app=express();app.set("port",process.env.PORT||3e3),app.set("views",__dirname+"/views"),app.set("view engine","ejs"),app.use(express.favicon()),app.use(express.logger("dev")),app.use(express.static(path.join(__dirname,"public"))),app.use(express.bodyParser()),app.use(express.methodOverride()),app.use(express.cookieParser()),app.use(express.session({secret:"cnriabook"})),app.use(function(n,t,i){n.session.flash?(n.session.flash.success&&(t.locals.success=n.session.flash.success),n.session.flash.error&&(t.locals.error=n.session.flash.error),delete n.session.flash.success,delete n.session.flash.error):n.session.flash={},i()}),app.use(app.router),"development"==app.get("env")&&app.use(express.errorHandler()),app.get("/",routes.index),app.get("/reg",checkNotLogin),app.get("/reg",routes.reg),app.post("/reg",checkNotLogin),app.post("/reg",routes.doReq),app.get("/login",checkNotLogin),app.get("/login",routes.login),app.post("/login",checkNotLogin),app.post("/login",routes.doLogin),app.get("/logout",checkLogin),app.get("/logout",routes.logout),app.get("/u/:user",routes.user),app.post("/post",checkLogin),app.post("/post",routes.post),http.createServer(app).listen(app.get("port"),function(){console.log("Express server listening on port "+app.get("port"))})